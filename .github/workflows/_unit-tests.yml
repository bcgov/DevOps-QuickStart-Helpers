name: Code Coverage

on:
  workflow_call:
    inputs:
      component:
        type: string
        required: true
        description: Component (backend, frontend), also used as path
      repository:
        type: string
        default: ${{ github.repository }}
        required: false
        description: Optionally, specify a different repo to clone
      sonar_organization:
        type: string
        default: bcgov-sonarcloud
        required: false
        description: SonarCloud organization, usually bcgov-sonarcloud
      sonar_projectKey:
        type: string
        default: false
        required: false
        description: Run SonarCloud? [true|false]
      test_cmd:
        type: string
        required: true
        description: Command to run unit tests
    secrets:
      github_token:
        required: false
        description: GitHub token, required for SonarCloud
      sonar_token:
        required: false
        description: Sonar token, project must be using monorepo mode

jobs:
  test:
    name: ${{ inputs.component }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

      - name: Cache npm cache directory
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache coverage for static analysis
        uses: actions/cache@v3
        with:
          path: ${{ inputs.component }}/coverage
          key: coverage-${{ inputs.component }}-${{ github.run_number }}
          restore-keys: |
            coverage-${{ inputs.component }}-

      - name: Tests
        run: |
          cd ${{ inputs.component }}
          npm ci
          ${{ inputs.test_cmd }}

      - name: SonarCloud Scan
        if: inputs.sonar_token
        uses: SonarSource/sonarcloud-github-action@master
        env:
          # Needed to get PR information, if any
          GITHUB_TOKEN: ${{ secrets.github_token }}
          SONAR_TOKEN: ${{ secrets.sonar_token }}
        with:
          projectBaseDir: ${{ inputs.component }}
          args: >
            -Dsonar.organization=${{ inputs.projectKey }}
            -Dsonar.projectKey=${{ inputs.projectKey }}
