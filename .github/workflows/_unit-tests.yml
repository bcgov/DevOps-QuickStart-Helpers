name: Unit Tests and Analysis

on:
  workflow_call:
    inputs:
      dir:
        description: Directory
        default: .
        required: false
        type: string
      repository:
        description: Non-default repository to clone
        default: ${{ github.repository }}
        required: false
        type: string
      sonar_args:
        # https://docs.sonarcloud.io/advanced-setup/analysis-parameters/
        description: SonarCloud command line arguments
        default: |
          -Dsonar.organization=bcgov-sonarcloud
          -Dsonar.projectKey=bcgov_${{ github.repository }}
        required: false
        type: string
      test_cmd:
        description: Command to run unit tests
        default: |
          npm ci
          npm run test:cov
        type: string
        required: false
    secrets:
      gh_token:
        description: GitHub token, required for SonarCloud
        required: false
      sonar_token:
        description: Sonar token, project must be using monorepo mode
        required: false

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-22.04
    outputs:
      run_sonarcloud: ${{ steps.sonar-check.outputs.run }}
    steps:
      - uses: actions/checkout@v3
        with:
          # Disable shallow clone for SonarCloud analysis
          fetch-depth: 0
          repository: ${{ inputs.repository }}

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

      - name: Cache npm cache directory
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache coverage for sonarcloud
        id: coverage-cache
        uses: actions/cache@v3
        with:
          path: ${{ inputs.dir }}/coverage
          key: coverage-${{ inputs.dir }}-${{ github.run_number }}
          restore-keys: |
            coverage-${{ inputs.dir }}-

      - name: Run Tests
        run: |
          cd ${{ inputs.dir }}
          ${{ inputs.test_cmd }}

      - name: Check for SonarCloud trigger
        id: sonar-check
        run: |
          # Trigger SonarCloud if secrets.sonar_token is provided
          if [ -z "${{ secrets.sonar_token }}" ]; then
            echo "secrets.sonar_token not detected"
          else
            echo "secrets.sonar_token detected!"
            echo "run=true" >> $GITHUB_OUTPUT
          fi

  sonarcloud:
    name: SonarCloud
    if: needs.tests.outputs.run_sonarcloud
    needs:
      - tests
    runs-on: ubuntu-22.04
    steps:
      - name: Restore coverage for analysis
        id: coverage-cache
        uses: actions/cache@v3
        with:
          path: ${{ inputs.dir }}/coverage
          key: coverage-${{ inputs.dir }}-${{ github.run_number }}
          restore-keys: |
            coverage-${{ inputs.dir }}-

      - name: Check cache
        run: |
          ls -la
          cd ${{ inputs.dir }}
          pwd
          whoami
          ls -la

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          # Needed to get PR information, if any
          GITHUB_TOKEN: ${{ secrets.gh_token }}
          SONAR_TOKEN: ${{ secrets.sonar_token }}
        with:
          projectBaseDir: ${{ inputs.dir }}
          args: ${{ inputs.sonar_args }}
