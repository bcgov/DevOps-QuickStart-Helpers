name: Merge to Main

on:
  push:
    branches:
      - main
    paths-ignore:
      - ".github/ISSUE_TEMPLATE/*"
      - "**.md"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  NAME: nr-quickstart-helpers

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  deploys-test:
    name: TEST Deployments
    uses: ./.github/workflows/_deploy.yml
    strategy:
      matrix:
        component: [backend, database, frontend]
        include:
          - component: database
            overwrite: false
            template_file: .github/openshift/deploy.database.yml
            template_vars: -p ZONE=test -p NAME=${{ github.event.repository.name }}
          - component: backend
            overwrite: true
            template_file: .github/openshift/deploy.backend.yml
            template_vars: -p ZONE=test -p PROMOTE=${{ github.repository }}/backend:test -p NAME=${{ github.event.repository.name }}
          - component: frontend
            overwrite: true
            template_file: .github/openshift/deploy.frontend.yml
            template_vars: -p ZONE=test -p PROMOTE=${{ github.repository }}/frontend:test -p NAME=${{ github.event.repository.name }}
    secrets:
      oc_namespace: ${{ secrets.OC_NAMESPACE }}
      oc_server: ${{ secrets.OC_SERVER }}
      oc_token: ${{ secrets.OC_TOKEN }}
    with:
      component: ${{ matrix.component }}
      environment: test
      overwrite: ${{ matrix.overwrite }}
      repository: bcgov/nr-quickstart-typescript
      template_file: ${{ matrix.template_file }}
      template_vars: ${{ matrix.template_vars }}

  penetration-tests:
    name: Pen Tests
    needs:
      - deploys-test
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        component: [backend, frontend]
    steps:
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.3.0
        with:
          target: https://${{ env.NAME }}-test-${{ matrix.component }}.apps.silver.devops.gov.bc.ca/
          cmd_options: "-a"
          allow_issue_writing: false
          fail_action: false

  deploys-prod:
    name: PROD Deployments
    needs:
      - penetration-tests
    uses: ./.github/workflows/_deploy.yml
    strategy:
      matrix:
        component: [backend, database, frontend]
        include:
          - component: database
            overwrite: false
            template_file: .github/openshift/deploy.database.yml
            template_vars: -p ZONE=prod -p NAME=${{ github.event.repository.name }}
          - component: backend
            overwrite: true
            template_file: .github/openshift/deploy.backend.yml
            template_vars: -p ZONE=prod -p PROMOTE=${{ github.repository }}/backend:test -p NAME=${{ github.event.repository.name }}
          - component: frontend
            overwrite: true
            template_file: .github/openshift/deploy.frontend.yml
            template_vars: -p ZONE=prod -p PROMOTE=${{ github.repository }}/frontend:test -p NAME=${{ github.event.repository.name }}
    secrets:
      oc_namespace: ${{ secrets.OC_NAMESPACE }}
      oc_server: ${{ secrets.OC_SERVER }}
      oc_token: ${{ secrets.OC_TOKEN }}
    with:
      component: ${{ matrix.component }}
      environment: prod
      overwrite: ${{ matrix.overwrite }}
      repository: bcgov/nr-quickstart-typescript
      template_file: ${{ matrix.template_file }}
      template_vars: ${{ matrix.template_vars }}

  image-promotions:
    name: Promote images to PROD
    needs:
      - deploys-prod
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        component: [backend, frontend]
    steps:
      - uses: shrink/actions-docker-registry-tag@v3
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.component }}
          target: test
          tags: prod
